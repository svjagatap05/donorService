package com.example.fundRaisingApp.service;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.client.RestTemplate;

import com.example.fundRaisingApp.model.PostModel;
import com.netflix.hystrix.contrib.javanica.annotation.HystrixCommand;

public class PostService {
	
	@Autowired
	private RestTemplate restTemplate;

	@HystrixCommand(fallbackMethod = "DonorServiceFallBack")

	public PostModel getDonorDetails(int postId) {

		String resourceUrl = "http://ecom-customer-service/ecom/customer/get/" + postId;

		PostModel post = restTemplate.getForObject(resourceUrl, PostModel.class);

		return post;

	}

	@SuppressWarnings("unused")
	private PostModel donorServiceFallBack(int donorId) {

	PostModel post = new PostModel();
		post.setPostId(postId);
		post.setPostName("");
		post.setPostAddress("");
		post.setPostEmail("");
		post.setPostAddress("");
		post.setPostAmount(0.0);
		

		System.out.println("Donor Service is down!!! fallback route enabled...");
		return post;

	}
		
	}


